#!/usr/bin/env python3
"""
Smithery Python MCP Server Bootstrap (HTTP Transport)
This file is generated by the Smithery CLI and should not be modified.
"""

import os
import sys
from importlib import import_module


def import_server_function(server_ref: str):
    """Import the server creation function from the user's module."""
    try:
        module_path, function_name = server_ref.split(":")
        module = import_module(module_path)
        return getattr(module, function_name)
    except Exception as e:
        print(f"✗ Failed to import server function '{server_ref}': {e}")
        sys.exit(1)


def main():
    """Main entry point for the MCP server."""
    try:
        # Server reference
        server_ref = "src.server:create_server"
        
        print(f"[smithery] Starting Python MCP server...")
        print(f"[smithery] Loading server from: {server_ref}")
        
        # Import the user's server creation function
        create_server = import_server_function(server_ref)
        
        # Get config (in production, this would come from the deployment config)
        # Try to find and use ConfigSchema from the user's module
        config = {}
        try:
            module_path, _ = server_ref.split(":")
            module = import_module(module_path)
            config_class = getattr(module, 'ConfigSchema', None)
            if config_class:
                config = config_class()
                print(f"[smithery] Using ConfigSchema: {config_class.__name__}")
        except Exception:
            # Fall back to empty config if ConfigSchema not found or fails
            pass
        
        # Create the server instance
        server = create_server(config)
        
        # Get port from environment or default
        port = int(os.environ.get("PORT", "8081"))
        server.settings.port = port
        
        print(f"✓ [smithery] MCP server starting on port {port}")
        
        # Run with streamable HTTP transport
        server.run(transport="streamable-http")
        
    except Exception as e:
        print(f"✗ [smithery] Failed to start MCP server: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()
